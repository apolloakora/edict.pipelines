---
#
# ######################### #
# playbook-master-setup.yml #
# ######################### #
#
# This playbook will take a master node that has undergone the basic setup applied
# in the playbook-nodes-setup.yml and makes a single node the kubernetes master.
#
# The prerequisites are
#
#   - the playbook-all-nodes.yml has been run
#   - (either) there has been no attempt to make this node a master
#   - (or)     previous attempts have been reset with playbook-master-reset.yml
#
# Once you've checked that the master configuration you can then procedd to join
# worker nodes to the cluster with the playbook-worker-join.yml
#

- hosts: master
  vars_files:
    - ./vars/variables.yml
  become: true
  name: Setup control plane and make kubectl talk to cluster
  tasks:

  - name: Removing config.toml to allow kubeadm to work
    ansible.builtin.file:
      path: /etc/containerd/config.toml
      state: absent
    
  - name: Initialize the Kubernetes control plane using kubeadm
    become: true
#    command: kubeadm init --control-plane-endpoint={{ k8s_master_hostname }} --apiserver-advertise-address="192.168.0.47" --apiserver-cert-extra-sans="192.168.0.47" --node-name=inca1
    command: kubeadm init --pod-network-cidr=192.168.0.0/16 --cri-socket /run/cri-dockerd.sock --token {{ kubeadm_join_token }}
    register: kubeadm_init_output

  - name: Store the Logs generated by the kubeadm cluster initialize command
    local_action: copy content={{ kubeadm_init_output.stdout }} dest=kubeadm-init-output.log backup=yes
    become: false

  - name: Create the .kube directory to hold the kubectl configuration
    become: false
    file:
      path: /home/{{ node_username }}/.kube
      state: directory
      owner: "{{ node_username }}"
      group: docker
      mode: 0755

  - name: Copy the kubectl configuration for the local user
    become: true
    copy:
      remote_src: yes
      src: /etc/kubernetes/admin.conf
      dest: /home/{{ node_username }}/.kube/config

  - name: set owner and mode of kube config file
    file:
      path: /home/{{ node_username }}/.kube/config
      state: file
      owner: "{{ node_username }}"
      group: docker
      mode: 0744

  - name: Fetch kubectl config for laptop (ansible host) to use
    fetch:
      src: /etc/kubernetes/admin.conf
      dest: kubectl-configuration.yml
      backup: yes
      flat: yes

  - name: Copy to local user so laptop kubectl connects to cluster
    become: false
    copy:
      src: kubectl-configuration.yml
      dest: ~/.kube/config
      backup: yes
    delegate_to: localhost

  - name: Install calico pod networking using kubectl on the master
    command: kubectl --kubeconfig=/home/{{ node_username }}/.kube/config create -f https://raw.githubusercontent.com/projectcalico/calico/v3.24.0/manifests/tigera-operator.yaml
  
  - name: create the manifest in order to install calico
    command: kubectl --kubeconfig=/home/{{ node_username }}/.kube/config create -f https://raw.githubusercontent.com/projectcalico/calico/v3.24.0/manifests/custom-resources.yaml
